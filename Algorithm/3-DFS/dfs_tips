dfs 关键就在于选择 对每个合法的选择进行枚举 然后进入dfs 从新的位置出发进行枚举
比较熟悉的数据结构就是邻接矩阵

并查集和dfs到底什么时候可以通用 什么时候不能通用呢?

547省份数量 给了一个矩阵 matrix[i][j]表示i城市是否与j城市相连 最后算一下省份数量
1. 并查集 两个城市相连最后可以归到一个祖宗头上 最后统计一下祖宗是自己的个数就可以
2. dfs 从一个城市出发 根据matrix的连通性 到达它相连通的下一个城市 然后再去下一个城市 有联系的城市会在一个dfs中访问个遍

200岛屿数量 这个矩阵跟上边不太一样 上边i是城市 matrix[i][j]表明连通性 这里matrix[i][j]表示的是位置坐标
dfs 从一个位置出发 然后有4个位置选择 上下左右 需要判断是否合法 到达新的位置后再去下一个位置
这个用并查集会比较麻烦 但是思路是用i*n+j表示一个位置 并与周围合法的位置进行union

695最大岛屿面积 这个矩阵和200一样
dfs 稍微做一些修改 对于每个岛屿用一个area记录面积 最后更新一个最大的

419军舰数量 matrix[i][j] X表示军舰 .表示空位 有一定的限制 军舰之间会用空位隔开
dfs 直接用200的岛屿数量就可以求解